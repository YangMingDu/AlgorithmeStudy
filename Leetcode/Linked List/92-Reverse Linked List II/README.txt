反转从位置 m 到 n 的链表。请使用一趟扫描完成反转。

说明:
1 ≤ m ≤ n ≤ 链表长度。

示例:

输入: 1->2->3->4->5->NULL, m = 2, n = 4
输出: 1->4->3->2->5->NULL

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/reverse-linked-list-ii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

思路：1.遍历到m的前一个位置 superior (因为需要遍历到前一个位置, 所以最好创建一个虚拟头结点)
      2.定义一个节点使其指向m的位置 cur = superior.next 然后就是按照反转链表1的方式直接套就好了. 需要注意一下循环的边界 循环结束之后, 脑海中要浮现出三个指针的位置(浮现个屁, 用纸笔画一下吧骚年) prev 指向n-m的位置,也就是最后一个旋转的节点 cur和next都指向n-m的下一个位置
       3.最后调整一下superior.next(m处的节点)和prev(n-m位置处)这两个节点的指向即可
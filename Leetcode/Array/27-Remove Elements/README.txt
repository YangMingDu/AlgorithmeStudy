给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。

不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。

元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。

 

示例 1:

给定 nums = [3,2,2,3], val = 3,

函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。

你不需要考虑数组中超出新长度后面的元素。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

思路：利用双指针，i遍历整个数组，k初始化为0，每当找到非目标值时，交换索引为i和k的两个值，并且指针k向后移一位，遍历到目标值时，k指针不变，数组长度减1即可。这样一来，所有的非目标值将会交换至数组前面，而目标值将会交换至末尾，随着数组长度减少，结果将不会遍历到目标值。